PROBLEM STATEMENT:
Given an array of integers, find the Kth largest sum subarray For example, given the array [1, -2, 3, -4, 5] and K = 2, the 2nd largest sum subarray would be [3, -4, 5], which has a sum of 4.

Please note that a subarray is the sequence of consecutive elements of the array.

SOLUTION:
                                                                                      TIME COMPLEXITY: O(n² · log k)
                                                                                      SPACE COMPLEXITY: O(k)

import java.util.ArrayList;
import java.util.PriorityQueue;

public class Solution {

	public static int getKthLargest(ArrayList<Integer> arr, int k) {

		PriorityQueue<Integer> pq= new PriorityQueue<>(); //min heap

		for(int i=0; i<arr.size(); i++){
			int sum=0;
			for(int j=i; j<arr.size(); j++){
				sum+= arr.get(j);
				if(pq.size()<k){
					pq.add(sum);
				}
				else{
					if(sum>pq.peek()){
						pq.poll();
						pq.add(sum);
					}
				}
			}
		}
		return pq.peek();
	}
}
